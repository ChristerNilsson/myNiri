// Generated by CoffeeScript 2.7.0
var Tile, antal, created, current, draw, echo, keyPressed, range, setup, shownTiles, tiles,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

echo = console.log;

range = _.range;

tiles = [];

current = -1;

antal = 1;

created = 0;

Tile = class Tile {
  constructor(letter, x, y, dx, dy) {
    this.letter = letter;
    this.x = x;
    this.y = y;
    this.dx = dx;
    this.dy = dy;
  }

  draw() {
    noFill();
    rect(this.x - this.dx, this.y - this.dy, 2 * this.dx, 2 * this.dy);
    fill('black');
    return text(this.letter, this.x, this.y);
  }

};

shownTiles = [];

setup = function() {
  createCanvas(600, 600);
  textAlign(CENTER, CENTER);
  return textSize(100);
};

draw = function() {
  var i, j, k, len, len1, ref, tile;
  background('gray');
  fill('black');
  for (j = 0, len = shownTiles.length; j < len; j++) {
    tile = shownTiles[j];
    tile.draw();
  }
  push();
  textSize(20);
  ref = range(tiles.length);
  for (k = 0, len1 = ref.length; k < len1; k++) {
    i = ref[k];
    if (i === current) {
      fill('yellow');
    } else {
      fill('black');
    }
    text(tiles[i], 20 + 20 * i, 20);
  }
  return pop();
};

keyPressed = function() {
  var n, other;
  echo(key);
  if (key === 'ArrowLeft') {
    current = modulo(current - 1, tiles.length);
  }
  if (key === 'ArrowRight') {
    current = modulo(current + 1, tiles.length);
  }
  if (key === 'n') {
    tiles.push("ABCDEFGHIJKLMNOPQRSTUVWXYZ"[created]);
    created += 1;
    current = tiles.length - 1;
  }
  n = tiles.length;
  if (key === '1') {
    antal = 1;
  }
  if (key === '2') {
    antal = 2;
  }
  if (key === '3') {
    antal = 3;
  }
  if (key === '4') {
    antal = 4;
  }
  if (antal > n) {
    antal = n;
  }
  if (key === 'a') { // move left
    other = modulo(current - 1, n);
    [tiles[current], tiles[other]] = [tiles[other], tiles[current]];
    current = other;
  }
  if (key === 'd') { // move right
    other = modulo(current + 1, n);
    [tiles[current], tiles[other]] = [tiles[other], tiles[current]];
    current = other;
  }
  if (key === 'Delete') {
    tiles.splice(current, 1);
    n = tiles.length;
    if (current === n) {
      current = tiles.length - 1;
    }
    if (antal > n) {
      antal = n;
    }
  }
  shownTiles = [];
  if (antal === 1) {
    shownTiles.push(new Tile(tiles[current], 300, 300, 300, 300));
  }
  if (antal === 2) {
    shownTiles.push(new Tile(tiles[current], 150, 300, 150, 300));
    shownTiles.push(new Tile(tiles[modulo(current + 1, n)], 450, 300, 150, 300));
  }
  if (antal === 3) {
    shownTiles.push(new Tile(tiles[current + 0], 150, 300, 150, 300));
    shownTiles.push(new Tile(tiles[modulo(current + 1, n)], 450, 150, 150, 150));
    shownTiles.push(new Tile(tiles[modulo(current + 2, n)], 450, 450, 150, 150));
  }
  if (antal === 4) {
    shownTiles.push(new Tile(tiles[current + 0], 150, 150, 150, 150));
    shownTiles.push(new Tile(tiles[modulo(current + 1, n)], 450, 150, 150, 150));
    shownTiles.push(new Tile(tiles[modulo(current + 2, n)], 150, 450, 150, 150));
    return shownTiles.push(new Tile(tiles[modulo(current + 3, n)], 450, 450, 150, 150));
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\myNiri\coffee\sketch.coffee